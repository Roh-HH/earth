<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="board">

 
 
    <!-- 공용:  컨텐츠, 댓글 닉네임 가져오기 / search 를 위해 id 가져오기 -->	
            <select id="getNicknamereply" parameterType="string" resultType="string">
                   select nickname from users where id=#{writer}
            </select>
            <select id="getNickname" parameterType="string" resultType="string">
                select nickname from users where id=#{id}
            </select>
            <select id="getBoardid" parameterType="string" resultType="string">
                select id from users where nickname=#{search}
            </select>
    <!-- 공용 뱃지 이미지 불러오기  -->
            <select id="getBadgeimg" parameterType="string" resultType="string">
                   select b.badgeimg from badge b, users u where b.badgenum = u.badge and u.id = #{id}
            </select>
            <select id="getBadgeimgreply" parameterType="string" resultType="string">
                   select b.badgeimg from badge b, users u where b.badgenum = u.badge and u.id = #{writer}
            </select>
	
	
	<!-- 이달의 챌린지 (4) 이다희  -->
	<select id="countAllChallenge" resultType="int">
		select count(*) from challenge
	</select>
	<insert id="insertChallenge" parameterType="monthDTO">
	 	insert into challenge values(challenge_seq.nextval, #{subject}, #{id}, #{pw}, #{ctt}, #{img}, sysdate, 0, #{maxcount}, 4, #{actable}, #{enddate}) 
	</insert>
	<select id="getChallenge" resultType="int">
		 select boardnum from (select * from challenge order by reg desc) where rownum = 1
	</select>
	<select id="getChallengeArticles" parameterType="hashmap" resultType="monthDTO">		
		<![CDATA[
			select B.*, case when b.enddate >= to_char(sysdate, 'YY/MM/DD') then '1' else '0' end as dateck, 
			DECODE(B.joincount, B.maxcount, 1, 0) ck from (select A.*, rownum r 
			from (select * from challenge order by reg desc) A) B where r >= #{start} and r <= #{end}
		]]>
	</select>
	 <select id="getChallengeArticle" parameterType="int" resultType="monthDTO">
	 	<![CDATA[
	 	select A.*, case when A.enddate >= to_char(sysdate, 'YY/MM/DD') then '1' else '0' end as dateck 
	 	from (select * from challenge)A where boardnum=${value}
		]]>
	 </select> 
	<update id="updateChallengeArticle" parameterType="monthDTO">
		update challenge set subject = #{subject}, ctt = #{ctt}, maxcount = #{maxcount}, enddate = #{enddate} where boardnum = #{boardnum}
	</update>
	<update id="updateChallengeArticleImg" parameterType="monthDTO">
		update challenge set subject = #{subject}, ctt = #{ctt}, img = #{img}, maxcount = #{maxcount},  enddate = #{enddate} where boardnum = #{boardnum}
	</update>
	 
	 <insert id="insertChReply" parameterType="hashmap">
	 	insert into challengecomment values(challengecom_seq.nextval, #{boardnum}, sysdate, #{writer}, #{ctt}, 11)
	</insert>
	
	<insert id="insertChJoin" parameterType="hashmap">
	 	insert into challenge_join values(#{boardnum}, #{id})
	</insert>
	 <update id="joinCountUp" parameterType="int">
  		update challenge set joincount = joincount+1 where boardnum = #{value}
  	</update>

  	<select id="getChReplyListCount" parameterType="int" resultType="int">
		select count(*) from challengecomment where boardnum = #{value}
	</select>
	
	<select id="getChReplyList" parameterType="hashmap" resultType="monthDTO">		
		<![CDATA[
			select B.*, writer nickname, writer badgeimg from (select A.*, rownum r from (select * from challengecomment order by regcomm desc) A) B where r >= #{startRow} and r <= #{endRow} and boardnum = #{boardnum}
		]]>
	</select>
	<select id="idCheck" parameterType="hashmap" resultType="int">
		select count(*) from challenge_join where boardnum = #{boardnum} and id=#{id}
	</select>
	
	<delete id="replydeletechallenge" parameterType="int">
		delete from challengecomment where commentnum = #{commentnum}
	</delete>
	
	<delete id="replydeletediary" parameterType="int">
		delete from diarycomment where commentnum = #{commentnum}
	</delete>
	
	<select id="dateCheck" parameterType="int" resultType="int">
		select count(*) from challenge where enddate > to_char(sysdate, 'YYYY/MM/DD') and boardnum = #{value}
	</select>
	
	
	
	<!-- 환경일기 (3) 이다희   -->
	<select id="countAllDiary" resultType="int">
		select count(*) from diary
	</select>
	<insert id="insertDiary" parameterType="diaryDTO">
		insert into diary values(diary_seq.nextval, #{subject}, #{id}, #{pw}, #{ctt}, #{img}, sysdate, #{readcount}, 3, 0)
	</insert>
	<select id="getDiaryArticles" parameterType="hashmap" resultType="diaryDTO">		
		<![CDATA[
			select B.*, id nickname, id badgeimg from (select A.*, rownum r from (select * from diary order by reg desc) A) B where r >= #{start} and r <= #{end}
		]]>
	</select>
	<select id="getDiaryArticle" parameterType="int" resultType="diaryDTO">
			select * from diary where boardnum = #{value}
	</select>
	<update id="addReadCountDairy" parameterType="int">
		<![CDATA[
			update diary set readcount=readcount+1 where boardnum = #{value}
		]]>
	</update>
	<select id="countDiarySearch" parameterType="hashmap" resultType="int">
		select count(*) from diary where ${sel} like '%'||#{search}||'%' 
	</select>

	<select id="getSearchDiaryArticles" parameterType="hashmap" resultType="diaryDTO">	
		<![CDATA[
			select B.* from (select A.*, rownum r from (select * from diary where ${sel} like '%'||#{search}||'%' order by reg desc) A) B where r >= #{start} and r <= #{end}
		]]>
	</select>	
	<update id="updateDiaryArticle" parameterType="diaryDTO" >
		update diary set subject = #{subject}, ctt = #{ctt} where boardnum = #{boardnum}  
	</update>
	<update id="updateDiaryArticleImg" parameterType="diaryDTO" >
		update diary set subject = #{subject}, ctt = #{ctt}, img = #{img} where boardnum = #{boardnum} 
	</update>
	 <select id="getPwDiary" resultType="string">
		select pw from diary where boardnum = #{value}
	</select>
	
	<insert id="likeup" parameterType="hashmap">
	 	insert into diary_recommend values(#{boardnum}, #{recid})
	</insert>
	 <update id="likeadd" parameterType="int">
  		update diary set recommend = recommend+1 where boardnum = #{value}
  	</update>
  	<select id="recidCheck" parameterType="hashmap" resultType="int">
		select count(*) from diary_recommend where boardnum = #{boardnum} and recid=#{recid}
	</select>
	
	<delete id="likeCancel" parameterType="hashmap">
		delete from diary_recommend where boardnum = #{boardnum} and recid=#{recid}
	</delete>
	 <update id="likedown" parameterType="int">
  		update diary set recommend = recommend-1 where boardnum = #{value}
  	</update> 
  	<update id="minusReadCountDairy" parameterType="int">
		<![CDATA[
			update diary set readcount=readcount-2 where boardnum = #{value}
		]]>
	</update>
 	 <insert id="insertDiaryReply" parameterType="hashmap">
	 	insert into diarycomment values(diarycom_seq.nextval, #{boardnum}, 0, 0, sysdate, #{receiver}, #{writer}, #{ctt}, 10)
	</insert>
 	  <select id="getDiaryReplyListCount" parameterType="int" resultType="int">
		select count(*) from diarycomment where boardnum = #{value}
	</select>
	
	<select id="getDiaryReplyList" parameterType="hashmap" resultType="diaryDTO">		
		<![CDATA[
			select B.*, writer nickname, writer badgeimg from (select A.*, rownum r from (select * from diarycomment order by regcomm desc) A) B where r >= #{startRow} and r <= #{endRow} and boardnum = #{boardnum}
		]]>
	</select>
	 
	
 
	
	
  
	
</mapper>
